version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    networks:
      - dev-network
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - dev-network
    ports:
      - "5050:80"
    depends_on:
      - postgres

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - ./data/redis:/data
    networks:
      - dev-network
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
      - ./rmq-init/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./rmq-init/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - dev-network
    ports:
      - "5672:5672"
      - "15672:15672"

  logstash:
    image: logstash:8.7.0
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=${LOGSTASH_JAVA_OPTS}
    volumes:
      - ./logstash-config:/usr/share/logstash/config
      - ./logstash-pipeline:/usr/share/logstash/pipeline
    networks:
      - dev-network
    ports:
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - redis
      - rabbitmq

  elasticsearch:
    image: elasticsearch:8.7.0
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - dev-network
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: kibana:8.7.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
    networks:
      - dev-network
    ports:
      - "5601:5601"

  domain:
    image: domain:latest
    container_name: domain
    environment:
      - GRPC_PORT=8989
      - DB_URL=jdbc:postgresql://postgres:5432/movies_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - RMQ_HOST=rabbitmq
      - RMQ_PORT=5672
      - RMQ_USERNAME=sorivma
      - RMQ_PASSWORD=sorivma
    ports:
      - "9191:9191"
    networks:
      - dev-network
    depends_on:
      - postgres
      - rabbitmq

  gateway:
    image: gateway:latest
    container_name: gateway
    environment:
      - RMQ_HOST=rabbitmq
      - RMQ_PORT=5672
      - RMQ_USERNAME=sorivma
      - RMQ_PASSWORD=sorivma
      - RMQ_VHOST=/
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GRPC_SERVER_HOST=domain
      - GRPC_SERVER_PORT=9191
    networks:
      - dev-network
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - rabbitmq
      - logstash

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus-init/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - gateway
    ports:
      - "9090:9090"
    networks:
      - dev-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge

volumes:
  postgres_data:
  es_data:
